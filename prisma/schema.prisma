// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  name         String
  email        String   @unique
  role         UserRole
  passwordHash String
  lastLogin    DateTime @default(now())
  roleId       Int
  roleRef      Role     @relation(fields: [roleId], references: [id])
  orders       Order[]

  @@map("users")
}

model Role {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  permissions String[]
  users       User[]

  @@map("roles")
}

model Client {
  id                  Int       @id @default(autoincrement())
  name                String
  cuit                String    @unique
  address             String
  phone               String
  email               String
  discountLevel       Int       @default(1)
  canEditPrices       Boolean   @default(false)
  commissionFee       Float     @default(0)
  sellsOnInstallments Boolean   @default(false)
  orders              Order[]
  orderDetails        OrderDetail[]
  claims              Claim[]

  @@map("clients")
}

model Product {
  id          Int           @id @default(autoincrement())
  name        String
  type        String
  application String
  colors      String[]
  status      String        @default("active")
  orderDetails OrderDetail[]

  @@map("products")
}

model Order {
  id          Int           @id @default(autoincrement())
  client      Client        @relation(fields: [clientId], references: [id])
  clientId    Int
  user        User          @relation(fields: [userId], references: [id])
  userId      Int
  status      String
  totalAmount Decimal
  orderDate   DateTime
  isPartial   Boolean
  details     OrderDetail[]
  claims      Claim[]

  @@map("orders")
}

model OrderDetail {
  id                 Int      @id @default(autoincrement())
  product            Product  @relation(fields: [productId], references: [id])
  productId          Int
  quantity           Int
  unitPrice          Decimal
  totalPrice         Decimal
  order              Order    @relation(fields: [orderId], references: [id])
  orderId            Int
  client             Client   @relation(fields: [clientId], references: [id])
  clientId           Int
  cartId             String?
  paymentId          String?
  deliveryNoteId     String?
  batch              ProductionBatch? @relation(fields: [batchId], references: [id])
  batchId            Int?
  status             String
  isProduced         Boolean
  productionDate     DateTime?
  productionDoneDate DateTime?
  dispatchReadyDate  DateTime?
  dispatchedDate     DateTime?
  deliveryNoteDate   DateTime?
  claim              Claim[]

  @@map("order_details")
}

model ProductionBatch {
  id             Int           @id @default(autoincrement())
  batchNumber    String        @unique
  productionDate DateTime
  plannedDate    DateTime
  status         String
  items          OrderDetail[]

  @@map("production_batches")
}

model Claim {
  id            Int         @id @default(autoincrement())
  orderDetail   OrderDetail @relation(fields: [orderDetailId], references: [id])
  orderDetailId Int         @unique
  order         Order       @relation(fields: [orderId], references: [id])
  orderId       Int
  client        Client      @relation(fields: [clientId], references: [id])
  clientId      Int
  reason        String
  status        String
  resolution    String?
  createdAt     DateTime

  @@map("claims")
}

enum UserRole {
  Admin
  Sales
  Production
  Guest
  System
}
