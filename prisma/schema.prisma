// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  name         String
  email        String   @unique
  role         UserRole @default(Invitado)
  roleId       Int
  passwordHash String
  lastLogin    DateTime @default(now())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  roleRel      Role     @relation(fields: [roleId], references: [id])
  orders       Order[]

  @@map("users")
}

model Role {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  permissions String[]
  users       User[]

  @@map("roles")
}

model Client {
  id                 Int           @id @default(autoincrement())
  name               String
  cuit               String        @unique
  address            String
  phone              String
  email              String        @unique
  discountLevel      Int
  canEditPrices      Boolean
  commissionFee      Float
  sellsOnInstallments Boolean
  orders             Order[]
  orderDetails       OrderDetail[]
  claims             Claim[]

  @@map("clients")
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  type        String
  application String
  colors      String[]
  status      String
  orderDetails OrderDetail[]

  @@map("products")
}

model Order {
  id          Int           @id @default(autoincrement())
  clientId    Int
  userId      Int
  status      String
  totalAmount Decimal       @db.Decimal(10, 2)
  orderDate   DateTime      @default(now())
  isPartial   Boolean
  client      Client        @relation(fields: [clientId], references: [id])
  user        User          @relation(fields: [userId], references: [id])
  orderDetails OrderDetail[]
  claims      Claim[]

  @@map("orders")
}

model OrderDetail {
  id                 Int      @id @default(autoincrement())
  productId          Int
  quantity           Int
  unitPrice          Decimal  @db.Decimal(10, 2)
  totalPrice         Decimal  @db.Decimal(10, 2)
  orderId            Int
  clientId           Int
  cartId             String?
  paymentId          String?
  deliveryNoteId     String?
  batchId            Int?
  status             String
  isProduced         Boolean
  productionDate     DateTime?
  productionDoneDate DateTime?
  dispatchReadyDate  DateTime?
  dispatchedDate     DateTime?
  deliveryNoteDate   DateTime?
  order              Order    @relation(fields: [orderId], references: [id])
  client             Client   @relation(fields: [clientId], references: [id])
  product            Product  @relation(fields: [productId], references: [id])
  batch              ProductionBatch? @relation(fields: [batchId], references: [id])
  claim              Claim[]

  @@map("order_details")
}

model ProductionBatch {
  id             Int           @id @default(autoincrement())
  batchNumber    String        @unique
  productionDate DateTime
  plannedDate    DateTime
  status         String
  items          OrderDetail[]

  @@map("production_batches")
}

model Claim {
  id            Int      @id @default(autoincrement())
  orderDetailId Int      @unique
  orderId       Int
  clientId      Int
  reason        String
  status        String
  resolution    String?
  createdAt     DateTime @default(now())
  orderDetail   OrderDetail @relation(fields: [orderDetailId], references: [id])
  order         Order       @relation(fields: [orderId], references: [id])
  client        Client      @relation(fields: [clientId], references: [id])

  @@map("claims")
}

enum UserRole {
  Admin
  Ventas
  Produccion
  Invitado
}
