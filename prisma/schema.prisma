// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  permissions String[]
  users       User[]
}

model User {
  id           Int      @id @default(autoincrement())
  name         String
  email        String   @unique
  role         UserRole @default(Invitado)
  roleId       Int
  role_relation Role    @relation(fields: [roleId], references: [id])
  lastLogin    DateTime?
  passwordHash String
  orders       Order[]

  @@index([roleId])
}

model Client {
  id                  Int           @id @default(autoincrement())
  name                String
  cuit                String        @unique
  address             String
  phone               String
  email               String        @unique
  discountLevel       Int           @default(1)
  canEditPrices       Boolean       @default(false)
  commissionFee       Float         @default(0)
  sellsOnInstallments Boolean       @default(false)
  orders              Order[]
  orderDetails        OrderDetail[]
  claims              Claim[]
}

model Product {
  id          Int           @id @default(autoincrement())
  name        String
  type        String
  application String
  colors      String[]
  status      String
  orderDetails OrderDetail[]
}

model Order {
  id          Int           @id @default(autoincrement())
  clientId    Int
  client      Client        @relation(fields: [clientId], references: [id])
  userId      Int
  user        User          @relation(fields: [userId], references: [id])
  status      String
  totalAmount Decimal
  orderDate   DateTime
  isPartial   Boolean
  orderDetails OrderDetail[]
  claims      Claim[]

  @@index([clientId])
  @@index([userId])
}

model OrderDetail {
  id                 Int      @id @default(autoincrement())
  orderId            Int
  order              Order    @relation(fields: [orderId], references: [id])
  productId          Int
  product            Product  @relation(fields: [productId], references: [id])
  clientId           Int
  client             Client   @relation(fields: [clientId], references: [id])
  quantity           Int
  unitPrice          Decimal
  totalPrice         Decimal
  cartId             String?
  paymentId          String?
  deliveryNoteId     String?
  batchId            Int?
  batch              ProductionBatch? @relation(fields: [batchId], references: [id])
  status             String
  isProduced         Boolean
  productionDate     DateTime?
  productionDoneDate DateTime?
  dispatchReadyDate  DateTime?
  dispatchedDate     DateTime?
  deliveryNoteDate   DateTime?
  claim              Claim?

  @@index([orderId])
  @@index([productId])
  @@index([clientId])
  @@index([batchId])
}

model ProductionBatch {
  id             Int           @id @default(autoincrement())
  batchNumber    String
  productionDate DateTime
  plannedDate    DateTime
  status         String
  items          OrderDetail[]
}

model Claim {
  id            Int         @id @default(autoincrement())
  orderDetailId Int         @unique
  orderDetail   OrderDetail @relation(fields: [orderDetailId], references: [id])
  orderId       Int
  order         Order       @relation(fields: [orderId], references: [id])
  clientId      Int
  client        Client      @relation(fields: [clientId], references: [id])
  reason        String
  status        String
  resolution    String?
  createdAt     DateTime

  @@index([orderId])
  @@index([clientId])
}

enum UserRole {
  Admin
  Ventas
  Producci√≥n
  Invitado
}
